#include "ESP32S3VGA.h"
#include <GfxWrapper.h>

// PinConfig and mode configuration
const PinConfig pins(-1, -1, -1, -1, 1, -1, -1, -1, -1, -1, 2, -1, -1, -1, -1, 3, 10, 11);
VGA vga;
Mode mode = Mode::MODE_320x240x60;
GfxWrapper<VGA> gfx(vga, mode.hRes, mode.vRes);

// Updated button pins for Player 1 and Player 2 (ensuring no conflicts)
const int buttonPlayer1Up = 0;        // GPIO pin 0 (Player 1 Up)
const int buttonPlayer1Down = 14;     // GPIO pin 14 (Player 1 Down)
const int buttonPlayer1Left = 12;     // GPIO pin 12 (Player 1 Left)
const int buttonPlayer1Right = 27;    // GPIO pin 27 (Player 1 Right)

const int buttonPlayer2Up = 4;        // GPIO pin 4 (Player 2 Up)
const int buttonPlayer2Down = 5;      // GPIO pin 5 (Player 2 Down)
const int buttonPlayer2Left = 16;     // GPIO pin 16 (Player 2 Left)
const int buttonPlayer2Right = 17;    // GPIO pin 17 (Player 2 Right)

// Teabag game state
int teabagX = 160, teabagY = 0;  // Teabag starts from the top
int teabagSpeedY = 2;
float cup1X = 5, cup1Y = 100;    // Cup 1 (Player 1) initial position
float cup2X = mode.hRes - 35, cup2Y = 100;  // Cup 2 (Player 2) initial position
const int cupHeight = 20, cupWidth = 30;
const int cupSpeed = 4;          // Speed at which cups move
int player1Score = 0, player2Score = 0;
const int winningScore = 10;     // Winning condition

bool gameOver = false;

void setup() {
    // Initialize buttons as input with pull-up resistors
    pinMode(buttonPlayer1Up, INPUT_PULLUP);
    pinMode(buttonPlayer1Down, INPUT_PULLUP);
    pinMode(buttonPlayer1Left, INPUT_PULLUP);
    pinMode(buttonPlayer1Right, INPUT_PULLUP);

    pinMode(buttonPlayer2Up, INPUT_PULLUP);
    pinMode(buttonPlayer2Down, INPUT_PULLUP);
    pinMode(buttonPlayer2Left, INPUT_PULLUP);
    pinMode(buttonPlayer2Right, INPUT_PULLUP);

    vga.bufferCount = 2;
    if (!vga.init(pins, mode, 16)) while (1) delay(1);

    vga.start();
}

void loop() {
    if (!gameOver) {
        vga.clear(vga.rgb(255, 255, 255));  // Set the background to white

        // Move Player 1's cup
        if (digitalRead(buttonPlayer1Up) == LOW && cup1Y > 0) cup1Y -= cupSpeed;  // Move up
        if (digitalRead(buttonPlayer1Down) == LOW && cup1Y < mode.vRes - cupHeight) cup1Y += cupSpeed;  // Move down
        if (digitalRead(buttonPlayer1Left) == LOW && cup1X > 0) cup1X -= cupSpeed;  // Move left
        if (digitalRead(buttonPlayer1Right) == LOW && cup1X < mode.hRes - cupWidth) cup1X += cupSpeed;  // Move right

        // Move Player 2's cup
        if (digitalRead(buttonPlayer2Up) == LOW && cup2Y > 0) cup2Y -= cupSpeed;  // Move up
        if (digitalRead(buttonPlayer2Down) == LOW && cup2Y < mode.vRes - cupHeight) cup2Y += cupSpeed;  // Move down
        if (digitalRead(buttonPlayer2Left) == LOW && cup2X > 0) cup2X -= cupSpeed;  // Move left
        if (digitalRead(buttonPlayer2Right) == LOW && cup2X < mode.hRes - cupWidth) cup2X += cupSpeed;  // Move right

        // Draw the cups
        gfx.fillRect(cup1X, cup1Y, cupWidth, cupHeight, vga.rgb(0, 0, 255));  // Player 1's cup (Blue)
        gfx.fillRect(cup2X, cup2Y, cupWidth, cupHeight, vga.rgb(255, 0, 0));  // Player 2's cup (Red)

        // Draw the teabag (Green teabag)
        gfx.fillRect(teabagX, teabagY, 10, 10, vga.rgb(0, 255, 0));  // Green teabag

        // Teabag movement
        teabagY += teabagSpeedY;

        // Teabag collision with cups (catch the teabag)
        if (teabagX <= cup1X + cupWidth && teabagX >= cup1X && teabagY >= cup1Y && teabagY <= cup1Y + cupHeight) {
            player1Score++;
            resetTeabag();
        }
        if (teabagX >= cup2X && teabagX <= cup2X + cupWidth && teabagY >= cup2Y && teabagY <= cup2Y + cupHeight) {
            player2Score++;
            resetTeabag();
        }

        // Teabag falls off the screen (missed)
        if (teabagY > mode.vRes) {
            resetTeabag();  // Reset the teabag after missing
        }

        // Display scoreboard (Black text for scores)
        gfx.setTextColor(vga.rgb(0, 0, 0));
        gfx.setCursor(50, 30);
        gfx.print("Player 1: ");
        gfx.print(player1Score);
        gfx.setCursor(mode.hRes - 150, 30);
        gfx.print("Player 2: ");
        gfx.print(player2Score);

        // Check if any player has won
        if (player1Score >= winningScore) {
            declareWinner(1);
        } else if (player2Score >= winningScore) {
            declareWinner(2);
        }

        vga.show();
    }
}

// Function to reset the teabag to a random position after being caught or missed
void resetTeabag() {
    teabagX = random(0, mode.hRes - 10);  // Random horizontal position
    teabagY = 0;  // Start from the top
}

// Function to declare the winner and stop the game
void declareWinner(int player) {
    gameOver = true;  // Stop the game loop

    vga.clear(vga.rgb(255, 255, 255));  // Clear the screen
    gfx.setTextColor(vga.rgb(0, 0, 0));  // Display the message in black
    gfx.setCursor(80, mode.vRes / 2);

    // Display the winning message
    if (player == 1) {
        gfx.print("Player 1 Wins!");
    } else {
        gfx.print("Player 2 Wins!");
    }

    vga.show();
}
